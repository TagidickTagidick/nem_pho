// Mocks generated by Mockito 5.4.4 from annotations
// in nem_pho/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dio/dio.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:nem_pho/core/network_client.dart' as _i4;
import 'package:talker_flutter/talker_flutter.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTalker_0 extends _i1.SmartFake implements _i2.Talker {
  _FakeTalker_0(
      Object parent,
      Invocation parentInvocation,
      ) : super(
    parent,
    parentInvocation,
  );
}

class _FakeDio_1 extends _i1.SmartFake implements _i3.Dio {
  _FakeDio_1(
      Object parent,
      Invocation parentInvocation,
      ) : super(
    parent,
    parentInvocation,
  );
}

/// A class which mocks [NetworkClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkClient extends _i1.Mock implements _i4.NetworkClient {
  MockNetworkClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Talker get talker => (super.noSuchMethod(
    Invocation.getter(#talker),
    returnValue: _FakeTalker_0(
      this,
      Invocation.getter(#talker),
    ),
  ) as _i2.Talker);

  @override
  _i3.Dio get dio => (super.noSuchMethod(
    Invocation.getter(#dio),
    returnValue: _FakeDio_1(
      this,
      Invocation.getter(#dio),
    ),
  ) as _i3.Dio);

  @override
  String getPrettyJSONString(Map<String, dynamic>? jsonObject) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrettyJSONString,
          [jsonObject],
        ),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.method(
            #getPrettyJSONString,
            [jsonObject],
          ),
        ),
      ) as String);

  @override
  _i6.Future<void> init() => (super.noSuchMethod(
    Invocation.method(
      #init,
      [],
    ),
    returnValue: _i6.Future<void>.value(),
    returnValueForMissingStub: _i6.Future<void>.value(),
  ) as _i6.Future<void>);

  @override
  _i6.Future<Map<String, dynamic>> post(
      String? url,
      Map<String, dynamic>? body,
      ) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            url,
            body,
          ],
        ),
        returnValue:
        _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> get(String? url) => (super.noSuchMethod(
    Invocation.method(
      #get,
      [url],
    ),
    returnValue:
    _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
  ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> delete(String? url) => (super.noSuchMethod(
    Invocation.method(
      #delete,
      [url],
    ),
    returnValue:
    _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
  ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> patch(
      String? url,
      Map<String, dynamic>? body,
      ) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [
            url,
            body,
          ],
        ),
        returnValue:
        _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<void> refresh() => (super.noSuchMethod(
    Invocation.method(
      #refresh,
      [],
    ),
    returnValue: _i6.Future<void>.value(),
    returnValueForMissingStub: _i6.Future<void>.value(),
  ) as _i6.Future<void>);

  @override
  void logRequest(
      String? type,
      String? url,
      ) =>
      super.noSuchMethod(
        Invocation.method(
          #logRequest,
          [
            type,
            url,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logResponse(
      int? statusCode,
      Map<String, dynamic>? body,
      String? type,
      String? url,
      ) =>
      super.noSuchMethod(
        Invocation.method(
          #logResponse,
          [
            statusCode,
            body,
            type,
            url,
          ],
        ),
        returnValueForMissingStub: null,
      );
}